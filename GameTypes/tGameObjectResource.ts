/**
 * tGameObjectResource.ts
 * Autogenerated by WaahTool v2.1.1 >:3
 */

import { tGameMain } from "./tGameMain"
export interface tGameObjectResource
{
	/**
	* Unknown
	*/
	parent: tGameMain
	/**
	* Unknown
	*/
	objectData: any
	/**
	* Unknown
	*/
	cantMoveMap: any
	/**
	* Unknown
	*/
	init(a: any): any
	/**
	* Unknown
	*/
	loadObject(a: any): any
	/**
	* Unknown
	*/
	createID(): any
	/**
	* Unknown
	*/
	getMapEditorData(a: any): any
	/**
	* Unknown
	*/
	convertData(a: any): any
	/**
	* Unknown
	*/
	convertDoorObject(a: any): any
	/**
	* Unknown
	*/
	tryOpenDoor(a: any): any
	/**
	* Unknown
	*/
	tryOpenStorage(a: any): any
	/**
	* Unknown
	*/
	tryOpenChest(a: any): any
	/**
	* Unknown
	*/
	tryOpenMonsterChest(a: any, b: any): any
	/**
	* Unknown
	*/
	openDoor(a: any): any
	/**
	* Unknown
	*/
	closeDoor(a: any): any
	/**
	* Unknown
	*/
	getOpenDoorInfo(a: any): any
	/**
	* Unknown
	*/
	getOpenStorageInfo(a: any): any
	/**
	* Unknown
	*/
	getOpenChestInfo(a: any): any
	/**
	* Unknown
	*/
	affect(a: any): any
	/**
	* Unknown
	*/
	getCantMoveMap(a: any): any
	/**
	* Unknown
	*/
	createFwood(a: any): any
	/**
	* Unknown
	*/
	yurasuFwood(a: any, b: any): any
	/**
	* Unknown
	*/
	inStorageItem(a: any, b: any, c: any, d: any, e: any): any
	/**
	* Unknown
	*/
	outStorageItem(a: any, b: any, c: any, d: any, e: any): any
	/**
	* Unknown
	*/
	getStorageMaxSpace(a: any): any
	/**
	* Unknown
	*/
	getStorageSpace(a: any): any
	/**
	* Unknown
	*/
	addStorageItem(a: any, b: any, c: any, d: any, e: any): any
	/**
	* Unknown
	*/
	removeStorageItem(a: any, b: any, c: any, d: any): any
	/**
	* Unknown
	*/
	createStorage2(a: any): any
	/**
	* Unknown
	*/
	createStorage3(a: any): any
	/**
	* Unknown
	*/
	createStorage4(a: any): any
	/**
	* Unknown
	*/
	createRankChest(a: any): any
	/**
	* Unknown
	*/
	createLevelMonsterChest(a: any): any
	/**
	* Unknown
	*/
	createChest(a: any): any
	/**
	* Unknown
	*/
	createMonsterChest(a: any): any
	/**
	* Unknown
	*/
	createRankHibi(a: any): any
	/**
	* Unknown
	*/
	isTurnEventObject(a: any): any
	/**
	* Unknown
	*/
	turnAction(a: any): any
	/**
	* Unknown
	*/
	turnAction_bomb(a: any, b: any): any
	/**
	* Unknown
	*/
	takeSkillAction(a: any, b: any, c: any, d: any, e: any, f: any): any
	/**
	* Unknown
	*/
	takeSkillAction_yubaku(a: any, b: any, c: any, d: any, e: any, f: any): any
	/**
	* Unknown
	*/
	viewUnlockLog(a: any, b: any): any
	/**
	* Unknown
	*/
	affectWarikomi_dungeonnext(a: any, b: any): any
	/**
	* Unknown
	*/
	affectStorage2(a: any, b: any): any
	/**
	* Unknown
	*/
	viewHogyokuKetsugo(a: any, b: any): any
	/**
	* Unknown
	*/
	kanteisosei(a: any, b: any): any
	/**
	* Unknown
	*/
	trialErrorMessage(a: any, b: any): any
}
